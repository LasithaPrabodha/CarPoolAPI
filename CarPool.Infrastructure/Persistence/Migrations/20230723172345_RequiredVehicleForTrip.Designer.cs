// <auto-generated />
using System;
using CarPool.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarPool.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230723172345_RequiredVehicleForTrip")]
    partial class RequiredVehicleForTrip
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Persistence")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarPool.Domain.Trips.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerSeat")
                        .HasColumnType("float");

                    b.Property<int?>("ViewedByCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trips", "Persistence");
                });

            modelBuilder.Entity("CarPool.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChatPreference")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDriver")
                        .HasColumnType("bit");

                    b.Property<int?>("Language")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScentsPreference")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "Persistence");
                });

            modelBuilder.Entity("CarPool.Domain.Trips.Trip", b =>
                {
                    b.OwnsMany("CarPool.Domain.Trips.Booking", "Bookings", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("BookingId");

                            b1.Property<Guid>("TripId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool?>("Accepted")
                                .HasColumnType("bit");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("DateCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("RequiredSeats")
                                .HasColumnType("int");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id", "TripId");

                            b1.HasIndex("TripId");

                            b1.ToTable("Bookings", "Persistence");

                            b1.WithOwner()
                                .HasForeignKey("TripId");

                            b1.OwnsMany("CarPool.Domain.Trips.Message", "Messages", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("MessageId");

                                    b2.Property<Guid>("BookingId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("TripId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("CreatedBy")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateTime>("DateCreated")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime>("DateModified")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("MessageText")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ModifiedBy")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<Guid>("ReceiverId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("SenderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("Id", "BookingId", "TripId");

                                    b2.HasIndex("BookingId", "TripId");

                                    b2.ToTable("Messages", "Persistence");

                                    b2.WithOwner()
                                        .HasForeignKey("BookingId", "TripId");
                                });

                            b1.OwnsMany("CarPool.Domain.Trips.Notification", "Notifications", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("NotificationId");

                                    b2.Property<Guid>("BookingId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("TripId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("CreatedBy")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateTime>("DateCreated")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime>("DateModified")
                                        .HasColumnType("datetime2");

                                    b2.Property<bool?>("IsRead")
                                        .HasColumnType("bit");

                                    b2.Property<string>("ModifiedBy")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("NotificationText")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<Guid>("ToUserId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("Id", "BookingId", "TripId");

                                    b2.HasIndex("BookingId", "TripId");

                                    b2.ToTable("Notifications", "Persistence");

                                    b2.WithOwner()
                                        .HasForeignKey("BookingId", "TripId");
                                });

                            b1.OwnsOne("CarPool.Domain.Trips.Review", "Review", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("ReviewId");

                                    b2.Property<Guid>("BookingId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("TripId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("CreatedBy")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateTime>("DateCreated")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime>("DateModified")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("ModifiedBy")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("Rating")
                                        .HasColumnType("int");

                                    b2.Property<string>("ReviewText")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<Guid>("UserId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.HasKey("Id", "BookingId", "TripId");

                                    b2.HasIndex("BookingId", "TripId")
                                        .IsUnique();

                                    b2.ToTable("Reviews", "Persistence");

                                    b2.WithOwner()
                                        .HasForeignKey("BookingId", "TripId");
                                });

                            b1.Navigation("Messages");

                            b1.Navigation("Notifications");

                            b1.Navigation("Review");
                        });

                    b.OwnsMany("CarPool.Domain.Trips.Stop", "Stops", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("TripId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("DateCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id", "TripId");

                            b1.HasIndex("TripId");

                            b1.ToTable("Stops", "Persistence");

                            b1.WithOwner()
                                .HasForeignKey("TripId");

                            b1.OwnsOne("CarPool.Domain.Common.Address", "Address", b2 =>
                                {
                                    b2.Property<Guid>("StopId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("StopTripId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("PostalCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Province")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("StopId", "StopTripId");

                                    b2.ToTable("Stops", "Persistence");

                                    b2.WithOwner()
                                        .HasForeignKey("StopId", "StopTripId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();
                        });

                    b.OwnsOne("CarPool.Domain.Common.Address", "Destination", b1 =>
                        {
                            b1.Property<Guid>("TripId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TripId");

                            b1.ToTable("Trips", "Persistence");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.OwnsOne("CarPool.Domain.Common.Address", "Origin", b1 =>
                        {
                            b1.Property<Guid>("TripId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TripId");

                            b1.ToTable("Trips", "Persistence");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.OwnsOne("CarPool.Domain.Common.Vehicle", "Vehicle", b1 =>
                        {
                            b1.Property<Guid>("TripId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Colour")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LicensePlate")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Make")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Model")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Year")
                                .HasColumnType("int");

                            b1.HasKey("TripId");

                            b1.ToTable("Trips", "Persistence");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.Navigation("Bookings");

                    b.Navigation("Destination")
                        .IsRequired();

                    b.Navigation("Origin")
                        .IsRequired();

                    b.Navigation("Stops");

                    b.Navigation("Vehicle")
                        .IsRequired();
                });

            modelBuilder.Entity("CarPool.Domain.Users.User", b =>
                {
                    b.OwnsOne("CarPool.Domain.Users.Entities.DriverProfile", "DriverProfile", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DriverProfileId");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("DateCreated")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ModifiedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("TotalKmsShared")
                                .HasColumnType("int");

                            b1.Property<int>("TotalPassengersDriven")
                                .HasColumnType("int");

                            b1.HasKey("Id", "UserId");

                            b1.HasIndex("UserId")
                                .IsUnique();

                            b1.ToTable("DriverProfiles", "Persistence");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsOne("CarPool.Domain.Common.DriverLicense", "DriverLicense", b2 =>
                                {
                                    b2.Property<Guid>("DriverProfileId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("DriverProfileUserId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<DateTime>("DriverLicenseExpiryDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("DriverLicenseNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("DriverProfileId", "DriverProfileUserId");

                                    b2.ToTable("DriverProfiles", "Persistence");

                                    b2.WithOwner()
                                        .HasForeignKey("DriverProfileId", "DriverProfileUserId");
                                });

                            b1.OwnsOne("CarPool.Domain.Common.Vehicle", "Vehicle", b2 =>
                                {
                                    b2.Property<Guid>("DriverProfileId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("DriverProfileUserId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Colour")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("LicensePlate")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Make")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Model")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("Year")
                                        .HasColumnType("int");

                                    b2.HasKey("DriverProfileId", "DriverProfileUserId");

                                    b2.ToTable("DriverProfiles", "Persistence");

                                    b2.WithOwner()
                                        .HasForeignKey("DriverProfileId", "DriverProfileUserId");
                                });

                            b1.Navigation("DriverLicense")
                                .IsRequired();

                            b1.Navigation("Vehicle");
                        });

                    b.OwnsOne("CarPool.Domain.Common.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", "Persistence");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Address");

                    b.Navigation("DriverProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
